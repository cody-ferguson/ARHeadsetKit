@Tutorials(name: "ARHeadsetKit") {
    @Intro(title: "Welcome to ARHeadsetKit") {
        ARHeadsetKit brings immersive AR headset experiences to the iPhone. Quickly prototype handheld AR apps that are enhanced by Google Cardboard.
        
        @Image(source: "google-cardboard-plus-ar.png", alt: "Google Cardboard plus AR")
    }
    
    @Chapter(name: "Essentials") {
        Create your first app with ARHeadsetKit, using basic AR objects.
        
        @Image(source: "1-4-image-2-1-preview.jpg", alt: "Differently colored shapes in front of a chair.")
        
        @TutorialReference(tutorial: "doc:Setting-Up-ARHeadsetKit")
        @TutorialReference(tutorial: "doc:Adding-Custom-Settings")        
        @TutorialReference(tutorial: "doc:Working-with-AR-Objects")
        @TutorialReference(tutorial: "doc:Alternative-Rendering-Modes")
    }
    
    @Chapter(name: "Interactive Experiences") {
        Bring hand-object interaction into your app and create holographic interfaces.
        
        @Image(source: "blank.png", alt: "")
        
        @TutorialReference(tutorial: "doc:Selecting-Objects")
        @TutorialReference(tutorial: "doc:Using-Delegate-Renderers")
        @TutorialReference(tutorial: "doc:Creating-a-User-Interface")
    }
    
    @Chapter(name: "Unlocking Everything") {
        Access all of ARHeadsetKit's features to bring any idea into AR.
        
        @Image(source: "blank.png", alt: "")
        
        @TutorialReference(tutorial: "doc:Reconfiguring-ARHeadsetKit")
        @TutorialReference(tutorial: "doc:Composing-Custom-Shaders")
        @TutorialReference(tutorial: "doc:Ray-Tracing-Functions")
        @TutorialReference(tutorial: "doc:The-Essence-of-GPGPU")
        
<!--    Encourage use of Google Cardboard at the very end to experience the final product in its full glory.    -->
    }
    
    <!-- Fourth chapter (several weeks ahead): -->
    <!-- Only if Apple fixes Metal frame capture, which is 100% broken in Xcode 13.0 (previously just 90% broken). - NVM -->
    <!-- Just split into separate command buffers and use gpuStartTime and gpuEndTime. Besides, it's easier to not introduce them to Metal Frame Capture given how hectic it probably will be even if it's working again.   -->
    
    <!-- Incorporate more framework extensions and shader utilities -->
    <!-- Include experience with debugging shaders - show what happens without ARHeadsetKit's debugging utilities :( -->
    
<!--  Chapter 4 will walk through accomplishing the disintegrating cube animation that got me so hyped up about Microsoft Hololens! I don't even know if I can do it yet, but I'll find a way! For this reason, it will be called "Truly Replicating Hololens".  -->
<!--  It will be wierd using ray tracing to interact with that, but I'll do it anyway!  -->

<!--   This is distinct from chapter 3's GPGPU project because it delves more into compute shaders and performance problems.   -->
}
